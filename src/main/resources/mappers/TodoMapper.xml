<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatics.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper의 namespace는 설정을 적용할 인터페이스를 지정함-->
<mapper namespace="com.zercok.demotest2.mapper.TodoMapper">
    <select id="getTime" resultType="string"> <!-- string은 별칭 처리가 된 상태이다!  -->
        select now();
    </select>
    <insert id="insert">
        insert into tbl_todo(title, duedate, writer) values (#{title}, #{dueDate}, #{writer});
    </insert>

    <select id="selectAll" resultType="com.zercok.demotest2.domain.TodoVO">
        select * from tbl_todo order by tno desc;
    </select>
    <select id="selectOne" resultType="com.zercok.demotest2.domain.TodoVO">
        select * from tbl_todo where tno = #{tno};
    </select>

    <update id="update">
        update tbl_todo set title=#{title}, dueDate=#{dueDate}, finished=#{finished} where tno = #{tno}
    </update>

    <delete id="delete">
        delete from tbl_todo where tno=#{tno};
    </delete>


    <select id="selectList" resultType="com.zercok.demotest2.domain.TodoVO">
        select * from tbl_todo
        <include refid="search"></include>
        order by tno desc limit #{skip}, #{size}
    </select>


    <select id="getCount" resultType="int">
        select count(tno) from tbl_todo
        <include refid="search"></include>
    </select>

    <sql id = "search">
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 't'.toString() ">
                        title like concat('%', #{keyword},'%')
                    </if>
                    <if test="type == 'w'.toString()">
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>
            <if test="finished">
                <trim prefix="and">
                    finished =1
                </trim>
            </if>
            <if test="from != null and to != null">
                <trim prefix="and">
                    dueDate between #{from} and #{to}
                </trim>
            </if>
        </where>
    </sql>

</mapper>